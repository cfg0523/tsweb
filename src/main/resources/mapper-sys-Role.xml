<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.techsen.tsweb.sys.dao.RoleDao">
    <resultMap type="Role" id="RoleMap">
        <id property="id" column="role_id"/>
        <result property="name" column="role_name"/>
        <result property="label" column="role_label"/>
        
        <result property="createBy" column="role_create_by"/>
        <result property="createDate" column="role_create_date"/>
        <result property="updateBy" column="role_update_by"/>
        <result property="updateDate" column="role_update_date"/>
        <result property="remark" column="role_remark"/>
        
        <collection property="userRoles" column="role_id" ofType="UserRole" select="com.techsen.tsweb.sys.dao.UserRoleDao.getUserRolesByRoleId"/>
        <collection property="auths" column="role_id" ofType="Auth" select="com.techsen.tsweb.sys.dao.AuthDao.getAuthsByRoleId"/>
    </resultMap>

    <sql id="RoleTable">sys_role_mstr</sql>
    
    <sql id="RoleColumns">
        role_id, role_name, role_label,
        role_create_by, role_create_date,
        role_update_by, role_update_date,
        role_remark
    </sql>

    <sql id="RoleProperties">
        #{id}, #{name}, #{label},
        #{createBy}, #{createDate},
        #{updateBy}, #{updateDate},
        #{remark}
    </sql>
    
    <sql id="RoleUpdateMap">
        role_name = #{name},
        role_label = #{label},
        <!-- role_create_by = #{createBy}, -->
        <!-- role_create_date = #{createDate}, -->
        role_update_by = #{updateBy},
        role_update_date = #{updateDate},
        role_remark = #{remark}
    </sql>

    <sql id="RoleWhereCondition">
        <where>
            <choose>
                <when test="id != null">
                    role_id = #{id}
                </when>
                <otherwise>
                    <if test="name != null">
                        role_name = #{name}
                    </if>
                    <if test="label != null">
                        and role_label = #{label}
                    </if>
                </otherwise>
            </choose>
        </where>
    </sql>
    
    <insert id="add" parameterType="Role">
        insert into <include refid="RoleTable"/> (
            <include refid="RoleColumns"/>
        ) values (
            <include refid="RoleProperties"/>
        )
    </insert>
    
    <delete id="delete" parameterType="Role">
        delete from <include refid="RoleTable"/>
        <where> role_id = #{id} </where>
    </delete>
    
    <update id="update" parameterType="Role">
        update <include refid="RoleTable"/>
        set <include refid="RoleUpdateMap"/>
        <where> role_id = #{id} </where>
    </update>

    <select id="get" parameterType="string" resultMap="RoleMap">
        select <include refid="RoleColumns"/>
        from <include refid="RoleTable"/>
        <where> role_id = #{id} </where>
    </select>
    
    <select id="getOneByEntity" parameterType="Role" resultMap="RoleMap">
        select <include refid="RoleColumns"/>
        from <include refid="RoleTable"/>
        <include refid="RoleWhereCondition"/>
    </select>
    
    <select id="getListByEntity" parameterType="Role" resultMap="RoleMap">
        select <include refid="RoleColumns"/>
        from <include refid="RoleTable"/>
        <include refid="RoleWhereCondition"/>
    </select>
    
    <select id="findAll" resultMap="RoleMap">
        select <include refid="RoleColumns"/>
        from <include refid="RoleTable"/>
    </select>
    
</mapper>