<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.techsen.tsweb.sys.dao.AuthDao">
    <resultMap type="Auth" id="AuthMap">
        <id property="id" column="auth_id"/>
        <result property="group" column="auth_group"/>
        <result property="code" column="auth_code"/>
        <result property="createBy" column="auth_create_by"/>
        <result property="createDate" column="auth_create_date"/>
        <result property="updateBy" column="auth_update_by"/>
        <result property="updateDate" column="auth_update_date"/>
        <result property="remark" column="auth_remark"/>
        
        <association property="principal" javaType="com.techsen.tsweb.sys.auth.Principal">
            <discriminator javaType="PrincipalType" column="auth_principal_type">
                <case value="User" resultMap="com.techsen.tsweb.sys.dao.UserDao.UserMap"/>
                <case value="Role" resultMap="com.techsen.tsweb.sys.dao.RoleDao.RoleMap"/>
            </discriminator>
        </association>
    </resultMap>

    <sql id="AuthTable">sys_auth_det</sql>
    
    <sql id="AuthColumns">
        auth_id, auth_principal_type, auth_principal_id, auth_group, auth_code,
        auth_create_by, auth_create_date,
        auth_update_by, auth_update_date,
        auth_remark
    </sql>

    <sql id="AuthProperties">
        #{id}, #{principal.principalType}, #{principal.principalId}, #{group}, #{code},
        #{createBy}, #{createDate},
        #{updateBy}, #{updateDate},
        #{remark}
    </sql>
    
    <sql id="AuthUpdateMap">
        auth_principal_type = #{principal.principalType},
        auth_principal_id = #{principal.principalId},
        auth_group = #{group},
        auth_code = #{code},
        <!-- auth_create_by = #{createBy}, -->
        <!-- auth_create_date = #{createDate}, -->
        auth_update_by = #{updateBy},
        auth_update_date = #{updateDate},
        auth_remark = #{remark}
    </sql>

    <sql id="AuthWhereCondition">
        <where>
            <choose>
                <when test="id != null">
                    auth_id = #{id}
                </when>
                <otherwise>
                    <if test="principal != null">
                        <if test="principal.principalType != null">
                            and auth_principal_type = #{principal.principalType}
                        </if>
                        <if test="principal.principalId != null">
                            and auth_principal_id = #{principal.principalId}
                        </if>
                    </if>
                    <if test="group != null">
                        and auth_group = #{group}
                    </if>
                    <if test="code gt 0">
                        and auth_code = #{code}
                    </if>
                </otherwise>
            </choose>
        </where>
    </sql>
    
    <insert id="add" parameterType="Auth">
        insert into <include refid="AuthTable"/> (
            <include refid="AuthColumns"/>
        ) values (
            <include refid="AuthProperties"/>
        )
    </insert>
    
    <delete id="delete" parameterType="Auth">
        delete from <include refid="AuthTable"/>
        <where> auth_id = #{id} </where>
    </delete>
    
    <update id="update" parameterType="Auth">
        update <include refid="AuthTable"/>
        set <include refid="AuthUpdateMap"/>
        <where> auth_id = #{id} </where>
    </update>

    <select id="get" parameterType="string" resultMap="AuthMap">
        select
            <include refid="AuthColumns"/>,
            <include refid="com.techsen.tsweb.sys.dao.UserDao.UserColumns"/>,
            <include refid="com.techsen.tsweb.sys.dao.RoleDao.RoleColumns"/>
        from
            <include refid="AuthTable"/>
            left join <include refid="com.techsen.tsweb.sys.dao.UserDao.UserTable"/> on auth_principal_id = user_id
            left join <include refid="com.techsen.tsweb.sys.dao.RoleDao.RoleTable"/> on auth_principal_id = role_id
        <where>
            auth_id = #{id}
        </where>
    </select>
    
    <select id="getOneByEntity" parameterType="Auth" resultMap="AuthMap">
        select
            <include refid="AuthColumns"/>,
            <include refid="com.techsen.tsweb.sys.dao.UserDao.UserColumns"/>,
            <include refid="com.techsen.tsweb.sys.dao.RoleDao.RoleColumns"/>
        from
            <include refid="AuthTable"/>
            left join <include refid="com.techsen.tsweb.sys.dao.UserDao.UserTable"/> on auth_principal_id = user_id
            left join <include refid="com.techsen.tsweb.sys.dao.RoleDao.RoleTable"/> on auth_principal_id = role_id
        <include refid="AuthWhereCondition"/>
    </select>
    
    <select id="getListByEntity" parameterType="Auth" resultMap="AuthMap">
        select
            <include refid="AuthColumns"/>,
            <include refid="com.techsen.tsweb.sys.dao.UserDao.UserColumns"/>,
            <include refid="com.techsen.tsweb.sys.dao.RoleDao.RoleColumns"/>
        from
            <include refid="AuthTable"/>
            left join <include refid="com.techsen.tsweb.sys.dao.UserDao.UserTable"/> on auth_principal_id = user_id
            left join <include refid="com.techsen.tsweb.sys.dao.RoleDao.RoleTable"/> on auth_principal_id = role_id
        <include refid="AuthWhereCondition"/>
    </select>
    
    <select id="findAll" resultMap="AuthMap">
        select
            <include refid="AuthColumns"/>,
            <include refid="com.techsen.tsweb.sys.dao.UserDao.UserColumns"/>,
            <include refid="com.techsen.tsweb.sys.dao.RoleDao.RoleColumns"/>
        from
            <include refid="AuthTable"/>
            left join <include refid="com.techsen.tsweb.sys.dao.UserDao.UserTable"/> on auth_principal_id = user_id
            left join <include refid="com.techsen.tsweb.sys.dao.RoleDao.RoleTable"/> on auth_principal_id = role_id
    </select>
    
</mapper>