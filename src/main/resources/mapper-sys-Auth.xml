<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.techsen.tsweb.sys.dao.AuthDao">
    <resultMap type="Auth" id="AuthMap">
        <id property="id" column="auth_id"/>
        <result property="principalType" column="auth_principal_type"/>
        <result property="principalId" column="auth_principal_id"/>
        <result property="resourceType" column="auth_resource_type"/>
        <result property="resourceGroup" column="auth_resource_group"/>
        <result property="code" column="auth_code"/>
        <result property="createBy" column="auth_create_by"/>
        <result property="createDate" column="auth_create_date"/>
        <result property="updateBy" column="auth_update_by"/>
        <result property="updateDate" column="auth_update_date"/>
        <result property="remark" column="auth_remark"/>
    </resultMap>

    <sql id="AuthTable">sys_auth_det</sql>
    
    <sql id="AuthColumns">
        auth_id, auth_principal_type, auth_principal_id,
        auth_resource_type, auth_resource_group, auth_code,
        auth_create_by, auth_create_date,
        auth_update_by, auth_update_date,
        auth_remark
    </sql>

    <sql id="AuthProperties">
        #{id}, #{principalType}, #{principalId},
        #{resourceType}, #{resourceGroup}, #{code},
        #{createBy}, #{createDate},
        #{updateBy}, #{updateDate},
        #{remark}
    </sql>
    
    <sql id="AuthUpdateMap">
        auth_principal_type = #{principalType},
        auth_principal_id = #{principalId},
        auth_resource_type = #{resourceType},
        auth_resource_group = #{resourceGroup},
        auth_code = #{code},
        <!-- auth_create_by = #{createBy}, -->
        <!-- auth_create_date = #{createDate}, -->
        auth_update_by = #{updateBy},
        auth_update_date = #{updateDate},
        auth_remark = #{remark}
    </sql>

    <sql id="AuthWhereCondition">
        <where>
            <choose>
                <when test="id != null">
                    auth_id = #{id}
                </when>
                <otherwise>
                    <if test="principalType != null">
                        and auth_principal_type = #{principalType}
                    </if>
                    <if test="principalId != null">
                        and auth_principal_id = #{principalId}
                    </if>
                    <if test="resourceType != null">
                        and auth_resource_type = #{resourceType}
                    </if>
                    <if test="resourceGroup != null">
                        and auth_resource_group = #{resourceGroup}
                    </if>
                    <if test="code gt 0">
                        and auth_code = #{code}
                    </if>
                </otherwise>
            </choose>
        </where>
    </sql>
    
    <insert id="add" parameterType="Auth">
        insert into <include refid="AuthTable"/> (
            <include refid="AuthColumns"/>
        ) values (
            <include refid="AuthProperties"/>
        )
    </insert>
    
    <delete id="delete" parameterType="Auth">
        delete from <include refid="AuthTable"/>
        <where> auth_id = #{id} </where>
    </delete>
    
    <update id="update" parameterType="Auth">
        update <include refid="AuthTable"/>
        set <include refid="AuthUpdateMap"/>
        <where> auth_id = #{id} </where>
    </update>

    <select id="get" parameterType="string" resultMap="AuthMap">
        select <include refid="AuthColumns"/>
        from <include refid="AuthTable"/>
        <where> auth_id = #{id} </where>
    </select>
    
    <select id="getOneByEntity" parameterType="Auth" resultMap="AuthMap">
        select <include refid="AuthColumns"/>
        from <include refid="AuthTable"/>
        <include refid="AuthWhereCondition"/>
    </select>
    
    <select id="getListByEntity" parameterType="Auth" resultMap="AuthMap">
        select <include refid="AuthColumns"/>
        from <include refid="AuthTable"/>
        <include refid="AuthWhereCondition"/>
    </select>
    
    <select id="findAll" resultMap="AuthMap">
        select <include refid="AuthColumns"/>
        from <include refid="AuthTable"/>
    </select>
    
    <select id="findBySql" resultMap="AuthMap">
        select <include refid="AuthColumns"/>
        from <include refid="AuthTable"/>
        <where> ${sql} </where>
    </select>
    
    <select id="getAuthsByUserId" parameterType="string" resultMap="AuthMap">
        select <include refid="AuthColumns"/>
        from <include refid="AuthTable"/>
        <where> auth_principal_type = 'user' and auth_principal_id = #{userId} </where>
    </select>
    
    <select id="getAuthsByRoleId" parameterType="string" resultMap="AuthMap">
        select <include refid="AuthColumns"/>
        from <include refid="AuthTable"/>
        <where> auth_principal_type = 'role' and auth_principal_id = #{roleId} </where>
    </select>
    
    <select id="getAuthsByRoleName" parameterType="string" resultMap="AuthMap">
        select <include refid="AuthColumns"/>
        from <include refid="AuthTable"/>
        join <include refid="com.techsen.tsweb.sys.dao.RoleDao.RoleTable"/> on auth_principal_id = role_id
        <where> auth_principal_type = 'role' and role_name = #{roleName} </where>
    </select>
    
</mapper>