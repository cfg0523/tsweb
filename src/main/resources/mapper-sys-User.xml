<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.techsen.tsweb.sys.dao.UserDao">
    <resultMap type="User" id="UserMap">
        <id property="id" column="user_id"/>
        <result property="username" column="user_name"/>
        <result property="password" column="user_password"/>
        
        <result property="createBy" column="user_create_by"/>
        <result property="createDate" column="user_create_date"/>
        <result property="updateBy" column="user_update_by"/>
        <result property="updateDate" column="user_update_date"/>
        <result property="remark" column="user_remark"/>
        
        <association property="indexMenu" column="user_index_menu" javaType="Menu" select="com.techsen.tsweb.sys.dao.MenuDao.get"/>
        
        <!-- 取消与用户的关联，是因为User对象将会保存在session中，如果保留关联对象，将会导致session的存储过多，对服务器压力较大 -->
        <!-- <collection property="userRoles" column="user_id" ofType="UserRole" select="com.techsen.tsweb.sys.dao.UserRoleDao.getUserRolesByUserId"/> -->
    </resultMap>

    <sql id="UserTable">sys_user_mstr</sql>
    
    <sql id="UserColumns">
        user_id, user_name, user_password, user_index_menu,
        user_create_by, user_create_date,
        user_update_by, user_update_date,
        user_remark
    </sql>

    <sql id="UserProperties">
        #{id}, #{username}, #{password}, #{indexMenu.id},
        #{createBy}, #{createDate},
        #{updateBy}, #{updateDate},
        #{remark}
    </sql>
    
    <sql id="UserUpdateMap">
        user_name = #{username},
        <!-- user_password = #{password}, -->
        user_index_menu = #{indexMenu.id},
        <!-- user_create_by = #{createBy}, -->
        <!-- user_create_date = #{createDate}, -->
        user_update_by = #{updateBy},
        user_update_date = #{updateDate},
        user_remark = #{remark}
    </sql>

    <sql id="UserWhereCondition">
        <where>
            <choose>
                <when test="id != null">
                    user_id = #{id}
                </when>
                <otherwise>
                    <if test="username != null">
                        user_name = #{username}
                    </if>
                    <if test="username != null">
                        and user_password = #{password}
                    </if>
                    <if test="indexMenu != null and indexMenu.id != null">
                        and user_index_menu = #{indexMenu.id}
                    </if>
                </otherwise>
            </choose>
        </where>
    </sql>
    
    <insert id="add" parameterType="User">
        insert into <include refid="UserTable"/> (
            <include refid="UserColumns"/>
        ) values (
            <include refid="UserProperties"/>
        )
    </insert>
    
    <delete id="delete" parameterType="User">
        delete from <include refid="UserTable"/>
        <where> user_id = #{id} </where>
    </delete>
    
    <update id="update" parameterType="User">
        update <include refid="UserTable"/>
        set <include refid="UserUpdateMap"/>
        <where> user_id = #{id} </where>
    </update>

    <select id="get" parameterType="string" resultMap="UserMap">
        select <include refid="UserColumns"/>
        from <include refid="UserTable"/>
        <where> user_id = #{id} </where>
    </select>
    
    <select id="getOneByEntity" parameterType="User" resultMap="UserMap">
        select <include refid="UserColumns"/>
        from <include refid="UserTable"/>
        <include refid="UserWhereCondition"/>
    </select>
    
    <select id="getListByEntity" parameterType="User" resultMap="UserMap">
        select <include refid="UserColumns"/>
        from <include refid="UserTable"/>
        <include refid="UserWhereCondition"/>
    </select>
    
    <select id="findAll" resultMap="UserMap">
        select <include refid="UserColumns"/>
        from <include refid="UserTable"/>
    </select>
    
    <select id="findByPager" resultMap="UserMap">
        select <include refid="UserColumns"/>
        from <include refid="UserTable"/>
        <if test='where != ""'>
            <where> ${where} </where>
        </if>
        <if test='orderBy != ""'> ${orderBy} </if>
        <if test='limit != ""'> ${limit} </if>
    </select>
    
    <select id="getTotalSizeByPager" resultType="int">
        select count(1)
        from <include refid="UserTable"/>
        <if test='where != ""'>
            <where> ${where} </where>
        </if>
    </select>
    
    <update id="changePassword" parameterType="User">
        update <include refid="UserTable"/>
        set user_password = #{password}
        <where> user_id = #{id} </where>
    </update>
    
</mapper>